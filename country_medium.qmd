---
monofont: Fira Code Light
echo: true
code-fold: true
---

# Country / Medium

In this section I want to look at the data on the granular country/medium level. Roughly, the questions I plan to ask and answer are:

-   identify and remove some noise in the data (low or zero volume mediums ?)
-   explore the marketing mix across countries in terms of the main metrics
    -   e.g. which mediums bring the most revenue and is this consisent across countries ?
-   are there countries with relatively low volume of free traffic - that however converts very well - which could indicate potential for market expansion ?

The upcoming first section is mostly data exploration and some cleaning steps - feel free to jump straight to the more interesting parts:

-   Exploration of the [profiles](#country-medium-profiles) in terms of medium mix across the different countries
-   Exploration of [high volume free traffic](#high-volume-free-traffic) - that is also converting well

# Data exploration

```{r}
#| label: setup
#| warning: false
#| message: false
library("here")
library("fs")
library("DT")
library("glue")
library("janitor")
library("scales")
library("rsample")
library("tidyverse")

data_dir <- "data"
file_name <- "medium_country.csv"

medium_country_raw <- 
  read_csv(
    path_join(c(here(), data_dir, file_name)),
    skip = 6
  ) |> 
  clean_names()
```

## Filter out low volume countries

Using the results from the [Country](country.qmd#remove-low-volume-countries) analysis - I decided to filter out some of the low volume countries in terms of \# users, transactions and revenue. This should reduce the noise and focus on higher volume and impact markets while keeping our insights actionable.

```{r}
#| label: remove-low-volume-countries
by_country <- 
  medium_country_raw |> 
  group_by(country) |> 
  summarise(
    # summable-metrics
    across(
      c(users, new_users, sessions, transactions, revenue),
      sum
    ),
    # take means for the rates, shares, durations
    across(
      c(bounce_rate, pages_session, avg_session_duration, ecommerce_conversion_rate),
      mean
    )
  ) |> 
  ungroup() |> 
  # calculate new columns
  mutate(
    revenue_per_transaction = revenue / transactions,
    new_users_share = new_users / users,
  ) |> 
  arrange(desc(revenue))

# filter only bigger volume countries
by_country <- by_country |> 
  filter((revenue > 20000) | (users > 1000) | (transactions > 100) )
```

Rename country-level columns with a suffix, I will stick them to the country-medium data to be able to compute further columns like shares and percentages.

```{r}
#| label: rename-country-cols
by_country <- by_country |> 
  rename_with(
    .fn = ~ glue("{.x}_country"),
    .cols = c(everything(), -country)
  )

by_country |> head(6) |> datatable(options = list(dom = "t"))
```

Setup a clean dataframe on country / medium level and compute some additional metrics.

```{r}
#| label: medium-country-clean
medium_country <- 
  # filtering join on top-volume countries
  medium_country_raw |> 
  inner_join(by_country, join_by(country)) |> 
  # re-arrange a bit
  arrange(desc(revenue_country), country, desc(revenue)) |> 
  relocate(country, .before = medium) |> 
  # calculate share of channel within country for main metrics
  mutate(
    revenue_share      = revenue       / revenue_country,
    users_share        = users         / users_country,
    new_users_share    = new_users     / new_users_country,
    sessions_share     = sessions      / sessions_country,
    transactions_share = transactions  / transactions_country
  ) |> 
  # rank channels within country
  group_by(country) |> 
  mutate(
    across(
      c(users, new_users, sessions, transactions, revenue),
      .fns = ~ dense_rank(desc(.x)),
      .names = "{col}_channel_within_country_rank"
    )
  ) |> 
  ungroup()


medium_country |> filter(country == "Spain") |> datatable(options = list(dom = "t"))
```

Besides filtering out the low volume countries, I would like to also filter out the super low volume `(country, medium)` pairs. In the above table for instance, scrolling to the last page shows pairs like e.g. `(Spain, Twitter) , (Spain, sms)` which have `1` user and `0` revenue.

I would like to check the share of such low volume country/medium pairs. Again taking just some kind of cut-off points - I'm going to start with:

`revenue < 100  or  users < 10  or  transaction < 10`

as a simple rule to filter these out.

```{r}
#| label: check-proportion-low-volume-mediums
medium_country <- medium_country |> 
  mutate(
    is_low_volume_medium = {
      (revenue < 50) & (users < 5) & (transactions  < 5)
    }
  ) 

medium_country |> 
  count(is_low_volume_medium) |> 
  mutate(perc = round(n / sum(n), 3)) |> 
  datatable(options = list(dom = 't'))
```

Ok seems like quite a big percentage of the country/medium pairs are actually low volume i.e. have less than 10 users, 10 transactions and 100 revenue. This seems quite a low benchmark so removing them seems the correct way to go because their contribution and impact is very limited.

In order to see the effect of this - I would like to check the number of mediums per country before and after the removal.

```{r}
#| label: before-after-removal-check
medium_country |>
  mutate(is_low_volume_medium = factor(is_low_volume_medium, levels = c(T, F), ordered = T)) |> 
  group_by(country, is_low_volume_medium) |> 
  summarise(n_mediums = n_distinct(medium)) |>
  mutate(n_mediums_total = sum(n_mediums)) |> 
  ungroup() |> 
  mutate(
    country = fct_reorder(country, n_mediums_total, sum),
    country = fct_lump(country, w = n_mediums_total, n = 20, ties.method = "random")
  ) |> 
  filter( country != "Other" ) |> 
  ggplot(aes(x = n_mediums, y = country, fill = is_low_volume_medium)) +
  geom_col() +
  scale_x_continuous(expand = c(0, 0.1)) +
  scale_fill_manual(
    name = "Is Low Volume Medium ?",
    values = c(`FALSE` = "green4", `TRUE` = "red3")
  ) +
  labs(
    title = "# of Mediums per Country, coloured by Too Low / Ok volume ?",
    x = "# Mediums",
    y = NULL
  ) +
  theme(
    legend.position = "bottom",
    legend.direction = "horizontal"
  )
```

It seems like it would \~halve the \# of mediums per country.

### Remove low volume mediums

```{r}
#| label: remove-low-volume-mediums
medium_country <- medium_country |>
  filter(!is_low_volume_medium) |> 
  select(-is_low_volume_medium)
```

# Country/Medium profiles {#country-medium-profiles}

What are the contributions of different mediums to the main metrics, across the different countries ?

## Absolute

I am going to stack each country's bars to the total absolute volume of the respective metric. The different colours of the mediums would add up to the total of the country for that metric in absolute units.

::: panel-tabset
### Sessions

```{r}
#| label: stacked-bars-medium-sessions-absolute
medium_country |>
  semi_join(
    by_country |> slice_max(order_by = sessions_country, n = 20),
    join_by(country)
  ) |>
  filter(country != "(not set)") |>
  mutate(
    medium = fct_lump(medium, n = 6, w = sessions),
    medium = fct_reorder(medium, sessions, max),
    country = fct_reorder(country, sessions, sum)
  ) |>
  ggplot(aes(x = sessions, y = country, fill = medium)) +
  geom_col(position = "stack") +
  scale_x_continuous(labels = comma_format(), expand = c(0, 0.3)) +
  scale_fill_brewer(palette = "Dark2", direction = 1) +
  theme(
    plot.title.position = "plot",
    legend.position = "bottom"
  ) +
  labs(
    title = "Sessions contribution of Mediums across Countries",
    y = NULL
  )
```

### Users

```{r}
#| label: stacked-bars-medium-users-absolute
medium_country |>
  semi_join(
    by_country |> slice_max(order_by = users_country, n = 20),
    join_by(country)
  ) |>
  filter(country != "(not set)") |>
  mutate(
    medium = fct_lump(medium, n = 6, w = users),
    medium = fct_reorder(medium, users, mean),
    country = fct_reorder(country, users, sum)
  ) |>
  ggplot(aes(x = users, y = country, fill = medium)) +
  geom_col(position = "stack") +
  scale_x_continuous(labels = comma_format(), expand = c(0, 0.3)) +
  scale_fill_brewer(palette = "Dark2", direction = 1) +
  theme(
    plot.title.position = "plot",
    legend.position = "bottom"
  ) +
  labs(
    title = "Users contribution of Mediums across Countries",
    y = NULL
  )
```

### New users

```{r}
#| label: stacked-bars-medium-new-users-absolute
medium_country |>
  semi_join(
    by_country |> slice_max(order_by = new_users_country, n = 20),
    join_by(country)
  ) |>
  filter(country != "(not set)") |>
  mutate(
    medium = fct_lump(medium, n = 6, w = new_users),
    medium = fct_reorder(medium, new_users, mean),
    country = fct_reorder(country, new_users, sum)
  ) |>
  ggplot(aes(x = new_users, y = country, fill = medium)) +
  geom_col(position = "stack") +
  scale_x_continuous(labels = comma_format(), expand = c(0, 0.3)) +
  scale_fill_brewer(palette = "Dark2", direction = 1) +
  theme(
    plot.title.position = "plot",
    legend.position = "bottom"
  ) +
  labs(
    title = "New Users contribution of Mediums across Countries",
    y = NULL
  )
```

### Transactions

```{r}
#| label: stacked-bars-medium-transactions-absolute
medium_country |>
  semi_join(
    by_country |> slice_max(order_by = transactions_country, n = 20),
    join_by(country)
  ) |>
  filter(country != "(not set)") |>
  mutate(
    medium = fct_lump(medium, n = 6, w = transactions),
    medium = fct_reorder(medium, transactions, mean),
    country = fct_reorder(country, transactions, sum)
  ) |>
  ggplot(aes(x = transactions, y = country, fill = medium)) +
  geom_col(position = "stack") +
  scale_x_continuous(labels = comma_format(), expand = c(0, 0.3)) +
  scale_fill_brewer(palette = "Dark2", direction = 1) +
  theme(
    plot.title.position = "plot",
    legend.position = "bottom"
  ) +
  labs(
    title = "Transactions contribution of Mediums across Countries",
    y = NULL
  )
```

### Revenue

```{r}
#| label: stacked-bars-medium-revenue-absolute
medium_country |>
  semi_join(
    by_country |> slice_max(order_by = revenue_country, n = 20),
    join_by(country)
  ) |>
  filter(country != "(not set)") |>
  mutate(
    medium = fct_lump(medium, n = 6, w = revenue),
    medium = fct_reorder(medium, revenue, mean),
    country = fct_reorder(country, revenue, sum)
  ) |>
  ggplot(aes(x = revenue, y = country, fill = medium)) +
  geom_col(position = "stack") +
  scale_x_continuous(labels = comma_format(), expand = c(0, 0.3)) +
  scale_fill_brewer(palette = "Dark2", direction = 1) +
  theme(
    plot.title.position = "plot",
    legend.position = "bottom"
  ) +
  labs(
    title = "Revenue contribution of Mediums across Countries",
    y = NULL
  )
```
:::

## Share

Here i want to stack each country's bars to 100% of the respective metric. The different colours of the mediums would represent the share in % that this medium contributed to the 100% for that metric and for that country.

::: panel-tabset
### Sessions

```{r}
#| label: stacked-bars-medium-sessions-share
medium_country |>
  semi_join(
    by_country |> slice_max(order_by = sessions_country, n = 20),
    join_by(country)
  ) |>
  filter(country != "(not set)") |>
  mutate(
    medium = fct_lump(medium, n = 6, w = sessions_share),
    medium = fct_reorder(medium, sessions_share, max),
    country = fct_reorder(country, sessions, sum)
  ) |>
  ggplot(aes(x = sessions_share, y = country, fill = medium)) +
  geom_col(position = "stack") +
  scale_x_continuous(labels = percent_format(), expand = c(0, 0)) +
  scale_fill_brewer(palette = "Dark2", direction = 1) +
  theme(legend.position = "bottom") +
  labs(
    title = "Sessions share per Medium across Countries",
    y = NULL
  )
```

### Users

```{r}
#| label: stacked-bars-medium-users-share
medium_country |>
  semi_join(
    by_country |> slice_max(order_by = users_country, n = 20),
    join_by(country)
  ) |>
  filter(country != "(not set)") |>
  mutate(
    medium = fct_lump(medium, n = 6, w = users_share),
    medium = fct_reorder(medium, users_share, max),
    country = fct_reorder(country, users, sum)
  ) |>
  ggplot(aes(x = users_share, y = country, fill = medium)) +
  geom_col(position = "stack") +
  scale_x_continuous(labels = percent_format(), expand = c(0, 0)) +
  scale_fill_brewer(palette = "Dark2", direction = 1) +
  theme(legend.position = "bottom") +
  labs(
    title = "Users share per Medium across Countries",
    y = NULL
  )
```

### New users

```{r}
#| label: stacked-bars-medium-new-users-share
medium_country |>
  semi_join(
    by_country |> slice_max(order_by = new_users_country, n = 20),
    join_by(country)
  ) |>
  filter(country != "(not set)") |>
  mutate(
    medium = fct_lump(medium, n = 6, w = new_users_share),
    medium = fct_reorder(medium, new_users_share, max),
    country = fct_reorder(country, new_users, sum)
  ) |>
  ggplot(aes(x = new_users_share, y = country, fill = medium)) +
  geom_col(position = "stack") +
  scale_x_continuous(labels = percent_format(), expand = c(0, 0)) +
  scale_fill_brewer(palette = "Dark2", direction = 1) +
  theme(legend.position = "bottom") +
  labs(
    title = "New Users share per Medium across Countries",
    y = NULL
  )
```

### Transactions

```{r}
#| label: stacked-bars-medium-transactions-share
medium_country |>
  semi_join(
    by_country |> slice_max(order_by = transactions_country, n = 20),
    join_by(country)
  ) |>
  filter(country != "(not set)") |>
  mutate(
    medium = fct_lump(medium, n = 6, w = transactions_share),
    medium = fct_reorder(medium, transactions_share, max),
    country = fct_reorder(country, transactions, sum)
  ) |>
  ggplot(aes(x = transactions_share, y = country, fill = medium)) +
  geom_col(position = "stack") +
  scale_x_continuous(labels = percent_format(), expand = c(0, 0)) +
  scale_fill_brewer(palette = "Dark2", direction = 1) +
  theme(legend.position = "bottom") +
  labs(
    title = "Transactions share per Medium across Countries",
    y = NULL
  )
```

### Revenue

```{r}
#| label: stacked-bars-medium-revenue-share
medium_country |>
  semi_join(
    by_country |> slice_max(order_by = revenue_country, n = 20),
    join_by(country)
  ) |>
  filter(country != "(not set)") |>
  mutate(
    medium = fct_lump(medium, n = 6, w = revenue_share),
    medium = fct_reorder(medium, revenue_share, mean),
    country = fct_reorder(country, revenue, sum)
  ) |>
  ggplot(aes(x = revenue_share, y = country, fill = medium)) +
  geom_col(position = "stack") +
  scale_x_continuous(labels = percent_format(), expand = c(0, 0)) +
  scale_fill_brewer(palette = "Dark2", direction = 1) +
  theme(
    plot.title.position = "plot",
    legend.position = "bottom"
  ) +
  labs(
    title = "Revenue share per Medium across Countries",
    y = NULL
  )
```
:::

## Table of medians

Tabulated view of the median values for each medium - of the respective metric's country share e.g. the median for `referral`'s `transaction_share` across all countries. Should give an idea of where this medium sits in the overall ranking of mediums across all countries.

```{r}
sessions_share_medians <- medium_country |>
  semi_join(
    by_country |> slice_max(order_by = sessions_country, n = 20),
    join_by(country)
  ) |> 
  group_by(medium) |> 
  summarise(median_sessions_share = median(sessions_share)) |>
  slice_max(order_by = median_sessions_share, n = 20) |> 
  mutate(median_sessions_share = percent_format(accuracy = 0.01)(median_sessions_share))


users_share_medians <- medium_country |>
  semi_join(
    by_country |> slice_max(order_by = users_country, n = 20),
    join_by(country)
  ) |> 
  group_by(medium) |> 
  summarise(median_users_share = median(users_share)) |>
  slice_max(order_by = median_users_share, n = 20) |> 
  mutate(median_users_share = percent_format(accuracy = 0.01)(median_users_share))


new_users_share_medians <- medium_country |>
  semi_join(
    by_country |> slice_max(order_by = new_users_country, n = 20),
    join_by(country)
  ) |> 
  group_by(medium) |> 
  summarise(median_new_users_share = median(new_users_share)) |>
  slice_max(order_by = median_new_users_share, n = 20) |> 
  mutate(median_new_users_share = percent_format(accuracy = 0.01)(median_new_users_share))

transactions_share_medians <- medium_country |>
  semi_join(
    by_country |> slice_max(order_by = transactions_country, n = 20),
    join_by(country)
  ) |> 
  group_by(medium) |> 
  summarise(median_transactions_share = median(transactions_share)) |>
  slice_max(order_by = median_transactions_share, n = 20) |> 
  mutate(median_transactions_share = percent_format(accuracy = 0.01)(median_transactions_share))


revenue_share_medians <- medium_country |>
  semi_join(
    by_country |> slice_max(order_by = revenue_country, n = 20),
    join_by(country)
  ) |> 
  group_by(medium) |> 
  summarise(median_revenue_share = median(revenue_share)) |>
  slice_max(order_by = median_revenue_share, n = 20) |> 
  mutate(median_revenue_share = percent_format(accuracy = 0.01)(median_revenue_share))

country_medium_view <- 
  list(
    sessions_share_medians,
    users_share_medians,
    new_users_share_medians,
    transactions_share_medians,
    revenue_share_medians
  ) |> 
  reduce(left_join, by = join_by(medium))

datatable(country_medium_view)
```

## Conclusions Country Medium Profiles

-   `referral` seems to be consistently the dominating medium across countries, driving \~45% of sessions / (new) users and \~75% of transactions and revenue
-   `(none)` is on the 2nd place, driving \~26% of sessions and (new) users, \~ 8% of transactions and revenue
-   `cpc` is on the 3rd place, driving \~11% of sessions and (new) users, \~8% of transactions and revenue
-   `organic` has slightly worse new users share median when compared to users share median i.e. it is not so good medium when it comes to bringing new users to the website.

Taking `referral, (none), organic, email` as free mediums - they jointly would contribute with \~75% of the traffic and \~85% of transactions and revenue overall. The "free" group of mediums in the medium-mix of the client are responsiblie for a big portion of the traffic and business - which is a good thing - in the sense that no (or little) marketing money is spent in order to generate this.

N.B. Probably not entirely true as paid brand marketing would likely highly influcence the organic traffic, as well as email is not completely free - there are at least some operational as well (likely high) licensing costs to partner with an email sending provider that can enable for high scale email sendout campaigns.

Nevertheless, I believe the conclusion remains that basically a big share of the website traffic pie is brought by mostly free mediums.

```{r}
#| label: country-medium-view-save
#| echo: false
#| message: false
filename <- "country_medium_view_value_per_medium.csv"

country_medium_view_value_per_medium <- country_medium_view |> 
  select(medium, median_transactions_share) |> 
  rename(medium_country_view_value = median_transactions_share)

write_csv(
  country_medium_view_value_per_medium,
  path_join(c(here(), data_dir, filename))
)
```

# High volume free traffic {#high-volume-free-traffic}

Given a rough classification of each medium as either free or paid. I would like to re-group-and-summarise each `(country, medium)` pair in terms of `sessions` and `ecommerce_conversion_rate`. I would take the sum of `sessions` and the `mean` of the `ecommerce_conversion_rate` per each such new grouped tuple. So for example `(Spain, cpc) -> (Spain, paid) ; (Italy, organic) -> (Italy, free)`.

I would like to answer the question: in the countries where paid traffic is low (in terms of % of sessions), are there any countries where the free traffic is already converting well (in terms of the mean ecomm.conv.rate).

If so - then this would mean that there are countries where we are probably not doing much of paid marketing (paid traffic, paid sessions are low - as proxy for marketing *spend* in that country). However there are people coming free, organically to the website *and* are converting well. So the conclusion here would be that we could boost marketing investment in these countries and expect good returns.

Label the mediums

```{r}
#| label: label-mediums-free-paid
#| echo: true

# label the free / paid mediums
paid_mediums <- c(
  "cpc",
  "display",
  "paid-social",
  "s-cpm",
  "cpc,cpc",
  "Social"
)
free_mediums <- c(
  "(none)",
  "referral",
  "organic",
  "email",
  "affiliate",
  "banner"
)
```

With the new labeling, re-group and summarise for the metrics of interest.

```{r}
#| label: high-vol-free-traffic-setup
#| message: false
free_vs_paid_by_country <- medium_country |> 
  # take top 100 countries w.r.t revenue
  semi_join(
    by_country |> slice_max(order_by = revenue_country, n = 150),
    join_by(country)
  ) |>
  # filter and relabel the mediums
  filter(medium %in% c(paid_mediums, free_mediums)) |> 
  mutate(
    medium = case_when(
      medium %in% paid_mediums ~ "paid",
      medium %in% free_mediums ~ "free"
    )
  ) |> 
  # re-group and summarise the metrics of interest
  group_by(country, medium) |> 
  summarise(
    sessions = sum(sessions),
    mean_conv_rate = mean(ecommerce_conversion_rate)
  ) |> 
  # calculate the % of free and paid sessions
  mutate(perc_sessions = sessions / sum(sessions)) |> 
  ungroup()

datatable(free_vs_paid_by_country)
```

> But by looking at 'share' it could still be that some countries have just very high free traffic and also still high paid traffic (but relatively low). I think good to pick countries with a good amount of Free traffic (so indicates traction) + an absolute low amount paid traffic (so then you know for sure it's not a focus country from an investment perspective yet) and then + a high free conversion-rate. And then clearly rank the most interesting countries from this and point out a few in the top as a conclusion of potential interesting ones.

In order to pinpoint the interesting countries - I need to make some choices as cutoff points

-   i want a good amout of free traffic -\> so it indicates traction
    -   at least 500 sessions per day in the year
-   i want a very small amount of paid traffic -\> so we know for sure that this is definitely not a focus country for the client
    -   less than 200 sessions per day in the year
-   and i want a high average conversion rate of the free traffic

```{r}
#| label: good-converting-low-tree-trafic
good_converting_low_free_traffic <- 
  free_vs_paid_by_country |> 
  # remove the not set countries
  filter(country != "(not set)") |> 
  select(country, medium, sessions, mean_conv_rate) |> 
  pivot_wider(id_cols = country, names_from = medium, values_from = c(sessions,mean_conv_rate)) |> 
  filter(
    # at least 500 free sessions per day
    sessions_free > 365 * 500,
    # less than 200 paid sessions per day
    sessions_paid < 365 * 200
  ) |> 
  arrange(desc(mean_conv_rate_free)) |> 
  mutate(across(contains("conv_rate"), percent_format(accuracy = 0.01)))

datatable(good_converting_low_free_traffic)
```

## Conclusions High volume free traffic

-   Denmark was often in the top countries in terms of sessions, revenue etc. and it is also on this list. However the surrounding Scandinavian countries like Finland and Norway were not in the top lists - but they do show up in this list. This could mean that there is some kind of "spill-over effect / cross-polination" going on and they could be potential candidates for boosting marketing in them
-   The top 3 candidate countries with the best conv.rate of the free traffic are Ireland, Saudi Arabia and Thailand
-   Excluding Denmark - we have Lithuania, Switzerland and Austria as the top 3 countries in this list with the most number of free sessions (yet not best conv.rate of it)

Combining these into one general list would give: Finland, Norway, Ireland, Saudi Arabia, Thailand, Lithuania, Switzerland, Austria - these are good candidate countries for marketing investments because - while having *low amounts of paid traffic*, they do bring in *good amounts of free traffic* and they *convert this free traffic very well*.

```{r}
#| label: good-converting-low-tree-trafic-candidates-save
#| echo: false
filename <- "good_conv_low_free_traffic_candidates.csv"

good_conv_low_free_traffic <- tibble(
  country = c(
    "Finland",
    "Norway",
    "Ireland",
    "Saudi Arabia",
    "Thailand",
    "Lithuania",
    "Switzerland",
    "Austria"
  )
) |> 
  mutate(good_converting_low_free_traffic = T)

write_csv(good_conv_low_free_traffic, path_join(c(here(), data_dir, filename)))
```

# Some other things I looked at

## Revenue per transaction for each medium

Lastly I would like to look at the derived metric `revenue_per_transaction` - which is simply the `revenue` divided by the number of `transactions` for each `country, medium` pair (excluding the ones that have zeros in either).

The question that I would like to answer is - does the above general picture still hold when looking at this metric - or would there be any differences ? Mostly - is there any medium that is either close or even better than `referral` - and if so, then it would mean that it should be likely scaled, because the customers coming from such a medium are more valuable.

In order to estimate the average revenue per transaction for each medium - I will pull 10,000 bootstrap resamples from the data (stratified by medium to make sure the resamples are representative of the overlying true distribution in the general sample) and I will calculate the average revenue per transaction for each sample. I could then plot the 05th - 50th - 95th percentile of the distribution of average revenue per transaction in order to see if these whiskers highly overlap each other.

::: panel-tabset
### Bootstrap means

```{r}
#| label: bootstrap-mean-revenue-per-transaction

n_bootstrap_times <- 10000

bootstrap_means <- 
  medium_country |>
  select(country, medium, revenue, transactions) |>
  filter(revenue > 0, transactions > 0) |> 
  mutate(revenue_per_transaction = revenue / transactions) |>
  # lump together some low volume mediums  
  mutate(
    medium = fct_lump(medium, n = 7, w = revenue_per_transaction),
    medium = fct_reorder(medium, revenue_per_transaction, .desc = T)
  ) |> 
  # bootstrap 
  bootstraps(times = n_bootstrap_times, strata = medium) |> 
  mutate(
    boot_means = map(splits, ~ {
      # calculate means grouped by medium
      as.data.frame(.x) |> 
        group_by(medium) |> 
        summarise(mean_revenue_per_transaction = mean(revenue_per_transaction))
    })
  ) |> 
  # explode into long dataframe
  unnest(boot_means)

bootstrap_means_wide <- bootstrap_means |> 
  # calculate percentiles of distribution
  group_by(medium) |> 
  reframe(
    percentile = c("05", "50", "95"),
    value = quantile(mean_revenue_per_transaction, probs = c(0.05, 0.50, 0.95))
  ) |> 
  # flip to better format for plotting
  pivot_wider(
    id_cols = medium,
    names_from = percentile,
    values_from = value,
    names_prefix = "boot_mean_"
  )

# Plot
bootstrap_means_wide |> 
  mutate(medium = fct_reorder(medium, boot_mean_50)) |> 
  ggplot() +
  geom_point(aes(x = medium, y = boot_mean_05), color = "dodgerblue4", size = 3) +
  geom_point(aes(x = medium, y = boot_mean_50), color = "dodgerblue3", size = 3) +
  geom_point(aes(x = medium, y = boot_mean_95), color = "dodgerblue4", size = 3) +
  geom_segment(
    aes(x = medium, xend = medium, y = boot_mean_05, yend = boot_mean_95),
    colour = "grey60"
  ) +
  scale_y_continuous(
    breaks = seq(0, 700, 25),
  ) +
  coord_flip() +
  labs(
    x = NULL,
    y = "Mean Revenue per Transaction",
    title = "Bootstrap means for Revenue per Transaction for different Mediums",
    subtitle = "Showing 5th / 50th (median) / 95th percentile for the bootstrapped values for the means"
  ) +
  theme(
    legend.position = "none",
    plot.title.position = "plot"
    )
```

### Referral vs. Organic - test for significance

test for signif.difference between referral vs. organic bootstrap distribution of revenue per transaction means

```{r}
#| label: referral-vs-organic-signif-test
rev_per_trans_referral <- bootstrap_means |> 
  filter(medium == "referral") |>
  pull(mean_revenue_per_transaction)

rev_per_trans_referral_organic <- bootstrap_means |>
  filter(medium == "organic") |>
  pull(mean_revenue_per_transaction)

t.test(
  rev_per_trans_referral,
  rev_per_trans_referral_organic,
  alternative = "greater"
)
```
:::

`referral` still is the best medium in terms of revenue per transaction. What is interesting I think is that `organic` jumped over `(none), cpc` in this view to be close second. This means `organic`, even though brings less (new) users, they are more valuable on average when compared with these other 2 mediums. Even though `organic` has whiskers that come close to `referral` - the t-test shows that those 2 are significantly different means.

It would be interesting to compare the average revenue per transaction value for `cpc` - to the average acquisition cost per customer, in order to come up with a ROI.

## Distribution of the shares for each medium

I would like to see the distribution of the revenue shares across all counties, split per medium.

I got the idea when doing the tabulated view of the medians of shares in the above section and I wanted to answer the question: are there some mediums with wide variance or conversely, if revenue shares are tightly distributed around certain means with little variation ?

Given the previously seen table of median revenue shares for mediums across countries - I expect `referral`'s distribution to be distinctively wide away from "the rest" - but it would be interesting to see e.g. how do `(none), cpc, organic` compare to each other - or if they even manage to spread out widely as to be competitive in a way to `referral` ?

::: panel-tabset
### Users

```{r}
medium_country |>
  semi_join(
    by_country |> slice_max(order_by = users_country, n = 200),
    join_by(country)
  ) |>
  mutate(
    medium = fct_lump(medium, n = 6, w = users),
    medium = fct_reorder(medium, users)
  ) |>
  select(country, medium, users, users_country, users_share) |>
  ggplot(aes(users_share)) +
  geom_histogram(binwidth = 0.015) +
  facet_wrap(~ medium, scales = "free_y", ncol = 1, strip.position = "right")
```

### New Users

```{r}
medium_country |>
  semi_join(
    by_country |> slice_max(order_by = new_users_country, n = 200),
    join_by(country)
  ) |>
  mutate(
    medium = fct_lump(medium, n = 6, w = new_users),
    medium = fct_reorder(medium, new_users)
  ) |>
  select(country, medium, new_users, new_users_country, new_users_share) |>
  ggplot(aes(new_users_share)) +
  geom_histogram(binwidth = 0.015) +
  facet_wrap(~ medium, scales = "free_y", ncol = 1, strip.position = "right")
```

### Revenue

```{r}
#| label: hist-dist-revenue-share
medium_country |>
  semi_join(
    by_country |> slice_max(order_by = revenue_country, n = 200),
    join_by(country)
  ) |>
  mutate(
    medium = fct_lump(medium, n = 6, w = revenue),
    medium = fct_reorder(medium, revenue)
  ) |>
  select(country, medium, revenue, revenue_country, revenue_share) |>
  ggplot(aes(revenue_share)) +
  geom_histogram(binwidth = 0.015) +
  facet_wrap(~ medium, scales = "free_y", ncol = 1, strip.position = "right")

```
:::

### Conclusion distribution of shares

When looking at the revenue shares distributions, indeed `referral` has by far a distribution mostly centered around the right end of the axis. It's interesting to see that it seems like it does not overlap at all with any of the `(none), cpc, organic` distributions i.e. there is no case for our client where one of these channels in a country - contribute as much as `referral` contributes in the "worst for `referral`" country. So quite consistent and convincing picture of the marketing medium mix in terms of what works for the client.

Furthermore - seeing that `organic, (none)` which I consider free mediums - perform as well as `cpc` - makes me think that

`cpc` performs better than `organic` in bringing (new) users - yet their revenue shares do not look vastly different.

Quite obvious is how the distributions for `referral, (none), cpc` are close in terms of (new) users - but then a striking difference appears when switching the view to revenue. This means that:

-   `referral` brings 50% of the users but 70% of the revenue
-   `(none)` brings 25% of the users but 7% of the revenue

Hence, the client does not manage to monetise mediums equally i.e. people coming from `(none)` usually bring less money than people coming from `referral` . However - keeping in mind that this is a view from the `country_medium.csv` file which means that this is the converting session coming from the last non-direct medium. In other words - `referral` does monetise the incoming users better, however this is not the whole picture as the other mediums might be contributing in other parts of the customer journey on the way to conversion. So it will be interesting to compare this view to the view that will come out of the `conversion_paths.csv` file i.e. the more general holistic view on the customer journey.
