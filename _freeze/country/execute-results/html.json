{
  "hash": "79afa2e3fb0dba4a6fc61880883e7904",
  "result": {
    "markdown": "---\necho: false\ncode-fold: true\nmonofont: Fira Code Light\nexecute:\n  warning: false\n  code-fold: true\n---\n\n\n# Country\n\nIn this section I will try to look at the `medium_country` data from a level higher - aggregated per country. I would like to see first a high-level intro to the data, see which countries drive the most users and revenue, try to identify a subset on which I can focus the analysis and lastly - try to give an advise to our client by just looking at this level.\n\n\n::: {.cell}\n\n:::\n\n\nThe source file contains data on 240 in total and e.g. looks like this for Croatia\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmedium_country_raw |> \n  filter(country == \"Croatia\") |> \n  arrange(desc(revenue)) |> \n  datatable()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-8055127975b00ad5a4e7\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-8055127975b00ad5a4e7\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\"],[\"referral\",\"(none)\",\"cpc\",\"organic\",\"email\",\"(not set)\",\"website\",\"Social\",\"s-cpm\",\"paid-social\",\"tram\",\"navbar\",\"social\",\"display\",\"mobile-notification\",\"button\",\"ads\",\"paidpromo\",\"cpc,cpc\",\"affiliate\",\"peoplebasedmarketing\",\"test\",\"twitter\",\"banner\",\"blablaba\",\"feed\",\"sms\",\"social-media\"],[\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\"],[14334,20591,12427,6484,1041,1082,35,124,3718,312,281,113,18,16,16,13,12,8,3,2,2,2,2,1,1,1,1,1],[12080,19026,10985,3479,491,755,1,81,3409,311,138,0,15,9,13,6,7,8,0,0,2,0,0,1,0,0,1,1],[21717,29102,18319,13172,2624,2290,84,190,4546,369,753,237,31,20,43,38,21,10,6,4,2,3,4,1,1,3,1,1],[0.5078049454,0.362861659,0.3546590971,0.2096872153,0.4832317073,0.05982532751,0.3571428571,0.7789473684,0.8587769468000001,0.9132791327999999,0.6268260292,0.4219409283,0.7419354839,0.75,0.511627907,0.3157894737,0.5238095238,0.9,0.3333333333,0.25,0.5,0.3333333333,1,1,0,0.3333333333,1,1],[2.362527053,4.830046045,5.012173154,5.714773763,2.941310976,0.6131004367,6.333333333,2.189473684,1.349318082,1.162601626,2.227091633,4.396624473,1.677419355,1.3,4.11627907,6.289473684,2.428571429,1.4,1.666666667,5.5,7,2,1,1,2,5.666666667,1,1],[212.450891,216.0374201,174.4474043,352.7511388,199.4885671,154.3393013,514.5714286,181.7421053,40.84139903,10.94850949,161.6321381,300.0759494,66.5483871,13.55,315.6046512,117.9210526,112.2857143,62.7,337,550.25,208,200,0,0,31,920,0,0],[0.0462771101,0.02848601471,0.009771275725,0.009034315213999999,0.006097560976,0.007423580786,0.0119047619,0.01052631579,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1005,829,179,119,16,17,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[324880.2716,179449.3319,46168.26303,33227.75358,5558.73,4158.27,301,95.33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>medium<\\/th>\\n      <th>country<\\/th>\\n      <th>users<\\/th>\\n      <th>new_users<\\/th>\\n      <th>sessions<\\/th>\\n      <th>bounce_rate<\\/th>\\n      <th>pages_session<\\/th>\\n      <th>avg_session_duration<\\/th>\\n      <th>ecommerce_conversion_rate<\\/th>\\n      <th>transactions<\\/th>\\n      <th>revenue<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[3,4,5,6,7,8,9,10,11]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nThe data is on country / medium level so I would like to collapse it down to just the country level grouping first and compute some additional high-level metrics.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_country <- \n  medium_country_raw |> \n  group_by(country) |> \n  summarise(\n    # summable-metrics\n    across(\n      c(users, new_users, sessions, transactions, revenue),\n      sum\n    ),\n    # take medians for the rates, shares, durations\n    across(\n      c(bounce_rate, pages_session, avg_session_duration, ecommerce_conversion_rate),\n      median\n    )\n  ) |> \n  ungroup() |> \n  # calculate new columns\n  mutate(\n    revenue_per_transaction = revenue / transactions,\n    new_users_share = new_users / users\n  )\n\nby_country |> filter(country == \"Croatia\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 12\n  country users new_users sessions transactions revenue bounce_rate\n  <chr>   <dbl>     <dbl>    <dbl>        <dbl>   <dbl>       <dbl>\n1 Croatia 60641     50819    93592         2168 593839.       0.504\n# ℹ 5 more variables: pages_session <dbl>, avg_session_duration <dbl>,\n#   ecommerce_conversion_rate <dbl>, revenue_per_transaction <dbl>,\n#   new_users_share <dbl>\n```\n:::\n:::\n\n\nAre there countries with very very low volume of transactions or users ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_country |> \n  select(users, transactions, revenue) |> \n  map(quantile, probs = seq(0, 1, 0.05))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$users\n        0%         5%        10%        15%        20%        25%        30% \n      2.00      74.50     385.00     568.50     974.80    1336.00    1786.10 \n       35%        40%        45%        50%        55%        60%        65% \n   2479.10    3462.40    4153.70    7831.00   11915.15   18281.60   31478.55 \n       70%        75%        80%        85%        90%        95%       100% \n  45452.50   72587.00  121966.20  256002.05  377302.90  824808.15 8390796.00 \n\n$transactions\n       0%        5%       10%       15%       20%       25%       30%       35% \n     0.00      2.00      7.90     11.70     23.80     33.00     42.80     58.65 \n      40%       45%       50%       55%       60%       65%       70%       75% \n    83.20    106.55    168.00    274.25    395.40    642.50   1120.60   1936.00 \n      80%       85%       90%       95%      100% \n  3442.80   6892.75  12443.30  21468.00 293169.00 \n\n$revenue\n          0%           5%          10%          15%          20%          25% \n       0.000     1010.094     3536.412     6083.276    11729.995    18284.208 \n         30%          35%          40%          45%          50%          55% \n   25438.798    34884.987    47421.774    58671.711    78038.093   111281.571 \n         60%          65%          70%          75%          80%          85% \n  156957.122   234950.814   385850.104   701653.123   901895.735  2206571.170 \n         90%          95%         100% \n 3484899.314  5879185.640 83228820.262 \n```\n:::\n:::\n\n\n-   about 15% of the countries have less than 500 users - which seems quite low for the whole of 2022\n-   setting \\~ 20,000 as limit for revenue would cut off the lower 20th percentile of countries - which seems also good (perhaps even too low given that the upper percentiles are in 100,000s of euros)\n\nBased on this quick checks I am inclined to set a very simple rule `revenue > 20,000` . I can go back to revise this later if needed - as well as look more into the lower revenue countries to see if there is something to be said for them separately.\n\nThe removed countries seem to be indeed small countries.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_country |> filter(revenue < 20000)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 63 × 12\n   country             users new_users sessions transactions revenue bounce_rate\n   <chr>               <dbl>     <dbl>    <dbl>        <dbl>   <dbl>       <dbl>\n 1 American Samoa        141       133      205            0      0        0.380\n 2 Anguilla              441       363      672           10   7993.       0.317\n 3 Benin                1702      1535     2413            9   2688.       0.544\n 4 Bhutan                309       279      378            7   4890.       0.571\n 5 Botswana             1654      1491     2330           33  14189.       0.400\n 6 British Indian Oce…    14        12       16            0      0        0.661\n 7 Burkina Faso         1216      1109     1755           25  14804.       0.372\n 8 Burundi               769       677     1156           14   7251.       0.533\n 9 Caribbean Netherla…   717       614     1029           18   7652.       0.413\n10 Central African Re…   506       448      928           13  17920.       0.561\n# ℹ 53 more rows\n# ℹ 5 more variables: pages_session <dbl>, avg_session_duration <dbl>,\n#   ecommerce_conversion_rate <dbl>, revenue_per_transaction <dbl>,\n#   new_users_share <dbl>\n```\n:::\n:::\n\n\n### \n\n### Maps\n\nGoing to try and plot the revenue, transactions, users on a map of the world - just to see how does it look like, where is the volume concentrated etc.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n211 codes from your data successfully matched countries in the map\n29 codes from your data failed to match with a country code in the map\n32 codes from the map weren't represented in your data\n```\n:::\n:::\n\n\n#### Revenue map\n\n\n::: {.cell .column-screen fig.format='svg'}\n::: {.cell-output-display}\n![](country_files/figure-html/revenue-map-1.png){width=70%}\n:::\n:::\n\n\n#### Users map\n\n\n::: {.cell .column-screen fig.format='svg'}\n::: {.cell-output-display}\n![](country_files/figure-html/users-map-1.png){width=70%}\n:::\n:::\n\n\n#### Transactions map\n\n\n::: {.cell .column-screen fig.format='svg'}\n::: {.cell-output-display}\n![](country_files/figure-html/transactions-map-1.png){width=70%}\n:::\n:::\n\n\nI will start with the following simple rule - either revenue more than €20,000 or users or transactions volume b bigger than 500 (i will come back to adjust these in case there is still lots of noise or conversely i am missing some granularity)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nby_country <- by_country |> \n  filter(\n    (revenue > 20000) | (users > 500) | (transactions > 500)\n  )\n```\n:::\n\n\n### Which countries \"drive\" the most ?\n\nWhich countries drive the most users ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_country |> \n  slice_max(order_by = users, n = 30) |> \n  mutate(country = fct_reorder(country, users)) |> \n  ggplot(aes(x = users, y = country)) +\n  geom_col() +\n  scale_x_continuous(labels = comma_format(), expand = c(0, 0.3)) +\n  labs(\n    title = \"Which countries drive the most users ?\",\n    x = \"# Users\",\n    y = NULL\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](country_files/figure-html/most-users-plot-1.png){width=672}\n:::\n:::\n\n\nIt seems that it is similar for new users.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_country |> \n  slice_max(order_by = new_users, n = 30) |> \n  mutate(country = fct_reorder(country, new_users)) |> \n  ggplot(aes(x = new_users, y = country)) +\n  geom_col() +\n  scale_x_continuous(labels = comma_format(), expand = c(0, 0.3)) +\n  labs(\n    title = \"Which countries drive the most new users ?\",\n    x = \"# New Users\",\n    y = NULL\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](country_files/figure-html/most-new-users-plot-1.png){width=672}\n:::\n:::\n\n\nAnd I expect the same picture more or less for revenue\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_country |> \n  slice_max(order_by = revenue, n = 30) |> \n  mutate(country = fct_reorder(country, revenue)) |> \n  ggplot(aes(x = revenue, y = country)) +\n  geom_col() +\n  scale_x_continuous(labels = comma_format(), expand = c(0, 0.3)) +\n  labs(\n    title = \"Which countries drive the most revenue ?\",\n    x = \"€ Revenue\",\n    y = NULL\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](country_files/figure-html/most-revenue-plot-1.png){width=672}\n:::\n:::\n\n\nI noticed something interesting here - Lithuania which was one of the top drivers for (new) users - in terms of revenue dropped significantly. I also have the sense that Australia - which was not even on the top 30 charts in terms of (new) users - jumped straight to the middle when we switched to revenue-view.\n\nI would like to check this bit more in detail by ranking the countries with respect to these metrics and checking a bit the difference in these ranks.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountry_ranks <- by_country |> \n  mutate(\n    across(\n      c(users, transactions, revenue),\n      ~ dense_rank(desc(.x)),\n      .names = \"{col}_rank\"\n    )\n  ) |> \n  select(country, ends_with(\"rank\")) |> \n  arrange(transactions_rank)\n\ndatatable(country_ranks)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-7bc1045a120d4c44f172\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-7bc1045a120d4c44f172\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\",\"168\",\"169\",\"170\",\"171\",\"172\",\"173\",\"174\",\"175\",\"176\",\"177\",\"178\",\"179\",\"180\",\"181\",\"182\",\"183\",\"184\",\"185\",\"186\",\"187\",\"188\",\"189\",\"190\",\"191\",\"192\",\"193\",\"194\",\"195\",\"196\",\"197\",\"198\",\"199\",\"200\",\"201\",\"202\",\"203\",\"204\",\"205\",\"206\"],[\"(not set)\",\"United States\",\"United Kingdom\",\"France\",\"Spain\",\"Germany\",\"Italy\",\"Russia\",\"Sweden\",\"Denmark\",\"Mexico\",\"Czechia\",\"Ireland\",\"Ukraine\",\"Norway\",\"Brazil\",\"Poland\",\"Austria\",\"Portugal\",\"Japan\",\"Greece\",\"Netherlands\",\"Thailand\",\"Canada\",\"Australia\",\"Turkey\",\"Romania\",\"Switzerland\",\"Belgium\",\"Colombia\",\"Israel\",\"Philippines\",\"India\",\"Finland\",\"Saudi Arabia\",\"Vietnam\",\"Peru\",\"United Arab Emirates\",\"South Korea\",\"Indonesia\",\"Argentina\",\"Singapore\",\"Chile\",\"Estonia\",\"Iceland\",\"Hungary\",\"Kazakhstan\",\"Malta\",\"Lithuania\",\"Slovakia\",\"Cyprus\",\"Malaysia\",\"Bulgaria\",\"South Africa\",\"Morocco\",\"New Zealand\",\"Latvia\",\"Hong Kong\",\"Croatia\",\"Egypt\",\"China\",\"Ecuador\",\"Cambodia\",\"Albania\",\"Belarus\",\"Serbia\",\"Taiwan\",\"Costa Rica\",\"Puerto Rico\",\"Kenya\",\"Bolivia\",\"Luxembourg\",\"Qatar\",\"Moldova\",\"Kuwait\",\"Jordan\",\"Dominican Republic\",\"Guatemala\",\"Georgia\",\"Panama\",\"Myanmar (Burma)\",\"Slovenia\",\"Lebanon\",\"Laos\",\"Azerbaijan\",\"Sri Lanka\",\"Montenegro\",\"Tunisia\",\"Oman\",\"Uruguay\",\"Kosovo\",\"Nigeria\",\"Venezuela\",\"Pakistan\",\"Bangladesh\",\"Bahrain\",\"Iraq\",\"Tanzania\",\"Armenia\",\"North Macedonia\",\"Jersey\",\"Ghana\",\"El Salvador\",\"Bosnia &amp; Herzegovina\",\"Uzbekistan\",\"Honduras\",\"Réunion\",\"Guadeloupe\",\"Nicaragua\",\"Nepal\",\"Maldives\",\"Kyrgyzstan\",\"Algeria\",\"Paraguay\",\"Cape Verde\",\"Monaco\",\"Macao\",\"Jamaica\",\"Uganda\",\"Martinique\",\"Palestine\",\"Guam\",\"Afghanistan\",\"U.S. Virgin Islands\",\"Bahamas\",\"Faroe Islands\",\"Andorra\",\"French Polynesia\",\"Senegal\",\"Gambia\",\"Haiti\",\"Antigua &amp; Barbuda\",\"Guernsey\",\"Aruba\",\"Iran\",\"Trinidad &amp; Tobago\",\"Barbados\",\"Sint Maarten\",\"Zimbabwe\",\"Gibraltar\",\"Madagascar\",\"St. Barthélemy\",\"Fiji\",\"Mauritius\",\"Angola\",\"Zambia\",\"Tajikistan\",\"Curaçao\",\"Ethiopia\",\"Rwanda\",\"Belize\",\"South Sudan\",\"Namibia\",\"Cayman Islands\",\"St. Lucia\",\"Grenada\",\"Côte d’Ivoire\",\"French Guiana\",\"Mali\",\"Mongolia\",\"Congo - Kinshasa\",\"St. Martin\",\"Mozambique\",\"Brunei\",\"Mayotte\",\"Sudan\",\"New Caledonia\",\"Syria\",\"Greenland\",\"Papua New Guinea\",\"Bermuda\",\"British Virgin Islands\",\"Liberia\",\"St. Vincent &amp; Grenadines\",\"Timor-Leste\",\"Seychelles\",\"Libya\",\"Sierra Leone\",\"Botswana\",\"Cameroon\",\"Somalia\",\"Turks &amp; Caicos Islands\",\"Mauritania\",\"Liechtenstein\",\"Guinea\",\"Guyana\",\"Djibouti\",\"Burkina Faso\",\"Malawi\",\"Dominica\",\"Western Sahara\",\"Northern Mariana Islands\",\"Caribbean Netherlands\",\"Burundi\",\"St. Kitts &amp; Nevis\",\"Central African Republic\",\"Gabon\",\"Yemen\",\"Guinea-Bissau\",\"Suriname\",\"Togo\",\"Benin\",\"Chad\",\"Turkmenistan\",\"Niger\",\"Congo - Brazzavillecontainer\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>country<\\/th>\\n      <th>users_rank<\\/th>\\n      <th>transactions_rank<\\/th>\\n      <th>revenue_rank<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,4]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nI would like to see which countries have either:\n\n-   difference-in-ranks (users minus revenue rank) bigger than 20 or\n-   the ratio of ranks is more than double (users to revenue rank)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountry_ranks |> \n  mutate(\n    ranks_diff = abs(users_rank - revenue_rank),\n    users_to_revenue_rank_ratio = users_rank / revenue_rank\n    ) |> \n  filter(\n    ranks_diff > 20 | users_to_revenue_rank_ratio >= 2\n    ) |> \n  datatable()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-35b8caeceaf916274ece\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-35b8caeceaf916274ece\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\"],[\"(not set)\",\"Denmark\",\"Ireland\",\"Japan\",\"Australia\",\"Lithuania\",\"Cambodia\",\"Laos\",\"Pakistan\",\"Bangladesh\",\"Guadeloupe\",\"Algeria\",\"French Polynesia\",\"Antigua &amp; Barbuda\",\"Iran\",\"Barbados\",\"Sint Maarten\",\"St. Barthélemy\",\"Fiji\",\"Ethiopia\",\"South Sudan\",\"Namibia\",\"St. Lucia\",\"Grenada\",\"Côte d’Ivoire\",\"Congo - Kinshasa\",\"Brunei\",\"Sudan\",\"Syria\",\"St. Vincent &amp; Grenadines\",\"Libya\",\"Sierra Leone\",\"Cameroon\",\"Somalia\",\"Mauritania\",\"Dominica\",\"Central African Republic\",\"Benin\"],[19,18,34,24,26,2,84,117,58,72,119,93,140,164,106,150,158,169,156,134,177,161,176,183,123,139,135,126,145,195,136,179,138,143,168,202,206,171],[1,10,13,20,25,49,63,84,94,95,108,113,127,131,133,135,135,139,140,145,148,149,151,152,153,155,158,160,161,164,166,166,167,167,168,174,179,181],[1,8,17,12,13,53,61,83,93,104,95,133,110,127,147,123,130,144,125,155,146,138,142,145,161,168,175,187,188,169,191,152,172,184,192,174,180,204],[18,10,17,12,13,51,23,34,35,32,24,40,30,37,41,27,28,25,31,21,31,23,34,38,38,29,40,61,43,26,55,27,34,41,24,28,26,33],[19,2.25,2,2,2,0.03773584905660377,1.377049180327869,1.409638554216867,0.6236559139784946,0.6923076923076923,1.252631578947368,0.6992481203007519,1.272727272727273,1.291338582677165,0.7210884353741497,1.219512195121951,1.215384615384615,1.173611111111111,1.248,0.8645161290322581,1.212328767123288,1.166666666666667,1.23943661971831,1.262068965517241,0.7639751552795031,0.8273809523809523,0.7714285714285715,0.6737967914438503,0.7712765957446809,1.153846153846154,0.7120418848167539,1.177631578947368,0.8023255813953488,0.7771739130434783,0.875,1.160919540229885,1.144444444444444,0.8382352941176471]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>country<\\/th>\\n      <th>users_rank<\\/th>\\n      <th>transactions_rank<\\/th>\\n      <th>revenue_rank<\\/th>\\n      <th>ranks_diff<\\/th>\\n      <th>users_to_revenue_rank_ratio<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,4,5,6]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nIndeed it seems there are some interesting cases here:\n\n-   Lithuania which is the 2nd biggest driver of users - is the 53rd place when it comes to revenue ?! This means that there are tons of users coming from Lithuania to the client's website but somehow they do not monetise them. This seems odd\n-   In addition to Australia - also Ireland and Japan seem to be 2x higher ranked in terms of revenue compared to rank in terms of users. This means that even though they do not bring the highest volumes of users to the website - they still manage to monetise them quite well - something to be investigated perhaps later (e.g. check their channel mix and see if it is any different than the others)\n\nOnce more i want to make sure Lithuania is strange and compare against e.g.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 12\n  country     users new_users sessions transactions   revenue bounce_rate\n  <chr>       <dbl>     <dbl>    <dbl>        <dbl>     <dbl>       <dbl>\n1 Germany   1889501   1687855  2845711        48819 12906843.       0.560\n2 Lithuania 2773044   2745659  2867737         3440   786699.       0.472\n# ℹ 5 more variables: pages_session <dbl>, avg_session_duration <dbl>,\n#   ecommerce_conversion_rate <dbl>, revenue_per_transaction <dbl>,\n#   new_users_share <dbl>\n```\n:::\n:::\n\n\nComparing the ratio of users vs. ratio of revenue for Lithuania vs. Germany\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompare_users <- by_country |> \n  filter(country %in% c(\"Lithuania\", \"Germany\")) |> \n  select(country, users) |> \n  deframe()\n\ncompare_revenue <- by_country |> \n  filter(country %in% c(\"Lithuania\", \"Germany\")) |> \n  select(country, revenue) |> \n  deframe()\n\nc(\n  users = compare_users,\n  users_ratio = compare_users[\"Lithuania\"] / compare_users[\"Germany\"],\n  \n  revenue = compare_revenue,\n  revenue_ratio = compare_revenue[\"Lithuania\"] / compare_revenue[\"Germany\"]\n) |> \n  prettyNum(scientific = F)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          users.Germany         users.Lithuania   users_ratio.Lithuania \n              \"1889501\"               \"2773044\"              \"1.467607\" \n        revenue.Germany       revenue.Lithuania revenue_ratio.Lithuania \n             \"12906843\"              \"786699.1\"            \"0.06095209\" \n```\n:::\n:::\n\n\nOk this is confirmation enough i guess - Lithuania is \\~140% bigger than Germany in terms of bringing users to the client's website - however it is strangely 6% of the revenue that Germany brings !?\n\n### Final overview of selected countries\n",
    "supporting": [
      "country_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/datatables-binding-0.28/datatables.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/dt-core-1.13.4/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/dt-core-1.13.4/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-core-1.13.4/js/jquery.dataTables.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}